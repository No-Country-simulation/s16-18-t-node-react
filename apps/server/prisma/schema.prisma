generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  DEFAULT
  ADMIN
}

enum StatePassenger {
  OK
  CANCELLED
}

enum StateTravel {
  PENDING
  STARTED
  COMPLETED
  CANCELLED
}

model User {
  id              String            @id @default(uuid())
  email           String            @unique
  password        String
  isActive        Boolean           @default(true)
  role            Role              @default(DEFAULT)
  userDetail      UserDetail[]
  preferenceAlert PreferenceAlert[]
  car             Car[]
  ratingsGiven    Rating[]          @relation(name: "DriverRelation")
  ratingsReceived Rating[]          @relation(name: "PassengerRelation")
  passengerTravel PassengerTravel[] @relation(name: "DriverRelation")
  driverTravel    PassengerTravel[] @relation(name: "PassengerRelation")
}

model UserDetail {
  id     String  @id @default(uuid())
  userID String
  dni    String
  name   String
  phone  String
  avatar String?

  user User @relation(fields: [userID], references: [id])
}

model PreferenceAlert {
  id          String @id @default(uuid())
  userID      String
  origin      String
  destination String

  user User @relation(fields: [userID], references: [id])
}

model Car {
  id       String  @id @default(uuid())
  userID   String
  brand    String
  color    String
  capacity String
  photo    String
  patent   String
  isActive Boolean @default(true)

  user User @relation(fields: [userID], references: [id])
}

model Rating {
  id          String @id @default(uuid())
  driverID    String
  passengerID String
  rating      Int
  review      String

  driver    User @relation(name: "DriverRelation", fields: [driverID], references: [id])
  passenger User @relation(name: "PassengerRelation", fields: [passengerID], references: [id])
}

model Travel {
  id               String             @id @default(uuid())
  origin           String
  destination      String
  startDate        DateTime           @db.Date()
  hour             DateTime           @db.Time()
  price            Int            @default(0)
  isActive         Boolean            @default(true)
  state            StateTravel        @default(PENDING)
  PreferenceTravel PreferenceTravel[]
}

model PreferenceTravel {
  id          String  @id @default(uuid())
  smoke       Boolean @default(true)
  pets        Boolean @default(true)
  description String
  travelID    String

  travel Travel @relation(fields: [travelID], references: [id])
}

model PassengerTravel {
  id          String         @id @default(uuid())
  passengerID String
  driverID    String
  state       StatePassenger @default(OK)

  driver    User @relation(name: "DriverRelation", fields: [driverID], references: [id])
  passenger User @relation(name: "PassengerRelation", fields: [passengerID], references: [id])
}
